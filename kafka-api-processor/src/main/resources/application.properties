spring.main.web-application-type=none
spring.kafka.bootstrap-servers: ${KAFKA_ADDRESS}:${KAFKA_PORT}
#spring.kafka.bootstrap-servers: localhost:9092
spring.cloud.function.definition: toDecision;toLog

spring.cloud.stream.kafka.binder.auto-add-partitions= true
spring.cloud.stream.kafka.binder.configuration.auto.offset.reset=latest
spring.cloud.stream.kafka.binder.configuration.max.poll.records=500
spring.cloud.stream.kafka.binder.configuration.max.poll.interval.ms=200000


#consumer
spring.cloud.stream.bindings.toDecision-in-0.destination: topic.request
spring.cloud.stream.bindings.toDecision-in-0.group= toDecision
spring.cloud.stream.bindings.toDecision-in-0.consumer.max-attempts=3
spring.cloud.stream.bindings.toDecision-in-0.consumer.concurrency=1

spring.cloud.stream.bindings.toLog-in-0.destination: topic.request
spring.cloud.stream.bindings.toLog-in-0.group= toLog
spring.cloud.stream.bindings.toLog-in-0.consumer.max-attempts=3
spring.cloud.stream.bindings.toLog-in-0.consumer.concurrency=1

#producer
spring.cloud.stream.bindings.toDecision-out-0.destination: topic.fileUpdate
spring.cloud.stream.bindings.toDecision-out-0.producer.partition-key-expression: headers['partitionKey']
spring.cloud.stream.bindings.toDecision-out-0.producer.partition-count= 3


spring.cloud.stream.bindings.toLog-out-0.destination: topic.fileCreate
spring.cloud.stream.bindings.toLog-out-0.producer.partition-key-expression: headers['partitionKey']
spring.cloud.stream.bindings.toLog-out-0.producer.partition-count= 3